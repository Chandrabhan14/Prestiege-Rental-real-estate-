{"version":3,"file":"static/js/689.ec12b3bd.chunk.js","mappings":"sKAuFA,QArFA,SAA4BA,GAAyB,IAAxB,aAACC,EAAY,MAAEC,GAAMF,EAE9C,MAAOG,EAAgBC,IAAqBC,EAAAA,EAAAA,WAAS,IAC/CC,EAAcC,IAAoBF,EAAAA,EAAAA,UAAS,IAC3CG,GAAcC,EAAAA,EAAAA,QAAO,OAO3BC,EAAAA,EAAAA,YAAU,KACc,KAAjBJ,GACCL,EAAaK,EACjB,GACD,CAACA,KASJI,EAAAA,EAAAA,YAAU,KACN,MAAMC,EAAsBC,IACpBJ,EAAYK,UAAYL,EAAYK,QAAQC,SAASF,EAAMG,SAC3DX,GAAkB,EACtB,EAIJ,OAFAY,SAASC,iBAAiB,YAAaN,GAEhC,KACHK,SAASE,oBAAoB,YAAaP,EAAmB,CAChE,GACF,IAEH,MAAMQ,EAAc,CAChB,CAAEC,IAAK,4BAA6BC,MAAO,eAC3C,CAAED,IAAK,6BAA8BC,MAAO,cAC5C,CAAED,IAAK,6BAA8BC,MAAO,eAC5C,CAAED,IAAK,8BAA+BC,MAAO,SAiBjD,OAPAX,EAAAA,EAAAA,YAAU,KAEHH,EAAiB,GAAG,GAGxB,CAACL,KAGAoB,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACIC,EAAAA,EAAAA,MAAA,OAAKC,IAAKlB,EAAamB,UAAU,8BAA6BH,SAAA,EAC1DC,EAAAA,EAAAA,MAAA,UAAQG,QAtDYC,KAC5BzB,GAAmBD,EAAe,EAqDeqB,SAAA,CAAElB,GAAgC,iBAAiBgB,EAAAA,EAAAA,KAAA,KAAGK,UAAU,mCAEtHxB,IACasB,EAAAA,EAAAA,MAAA,OAAKE,UAAU,sCAAqCH,SAAA,EAChDF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,8CAA6CH,UACxDF,EAAAA,EAAAA,KAAA,MAAAE,SAAI,oBAEF,MAAEF,EAAAA,EAAAA,KAAA,OAAKK,UAAU,kEAAiEH,SACnF,OAAZL,QAAY,IAAZA,OAAY,EAAZA,EAAcW,KAAI,CAACC,EAAMC,KACtBP,EAAAA,EAAAA,MAAA,KAAeG,QAASA,IArDHG,KAE7BxB,EAAiBwB,EAAKV,OACtBjB,GAAkB,EAAM,EAkDc6B,CAAwBF,GAAMJ,UAAU,8BAA6BH,SAAA,EAC/FF,EAAAA,EAAAA,KAAA,OAAKF,IAAKW,EAAKX,IAAKc,IAAI,MACxBZ,EAAAA,EAAAA,KAAA,KAAAE,SAAIO,EAAKV,UAFLW,cAaxB,C","sources":["pages/PropertyTypeFilters.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\n\nfunction PropertyTypeFilters({selectedType, reset}) {\n    \n    const [contentVisible, setContentVisible] = useState(false);\n    const[propertylabel,setPropertylabel] = useState(\"\");\n    const dropdownRef = useRef(null);\n\n\n    const toggleContentVisibility = () => {\n        setContentVisible(!contentVisible);\n    };\n\n    useEffect(() => {\n        if(propertylabel !==''){\n            selectedType(propertylabel);\n        }\n    }, [propertylabel]);\n\n    const handlePropertyTypeClick = (item) => {\n      //  selectedType(item.label);\n        setPropertylabel(item.label);\n        setContentVisible(false); // Close the dropdown content after property type is selected\n    };\n\n\n    useEffect(() => {\n        const handleClickOutside = (event) => {\n            if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n                setContentVisible(false);\n            }\n        };\n        document.addEventListener('mousedown', handleClickOutside);\n        \n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, []);\n    \n    const propertyType =[\n        { src: \"/assests/Img/any_icon.png\", label: \"Residential\" },\n        { src: \"/assests/Img/Apartment.png\", label: \"Commercial\" },\n        { src: \"/assests/Img/home_icon.png\", label: \"Condominium\" },\n        { src: \"/assests/Img/Condo_icon.png\", label: \"Land\" },\n        // { src: \"/assests/Img/Townhome_icon.png\", label: \"Townhome\" },\n        // { src: \"/assests/Img/MultiFamily__icon.png\", label: \"Multi-family\" },\n        // { src: \"/assests/Img/Mobile_icon.png\", label: \"Mobile\" },\n        // { src: \"/assests/Img/Farm_icon.png\", label: \"Farm\" },\n        // { src: \"/assests/Img/Land_icon.png\", label: \"Land\" }\n    ]\n\n\n \n    useEffect(() => {\n        // if (reset == true) { \n           setPropertylabel(\"\");\n        // }\n        \n    }, [reset]);\n\n    return (\n        <>\n            <div ref={dropdownRef} className='GeographicalFilters_area_hp'>\n                <button onClick={toggleContentVisibility}>{propertylabel ? propertylabel : \"Property Type\" }<i className=\"fa-solid fa-angle-down ms-3\"></i></button>\n\n{  contentVisible &&  (\n                <div className='GeographicalFilters_content_area_hp'>\n                    <div className='GeographicalFilters_heading_content_area_hp'>\n                        <h4>Property Type</h4>\n                        {/* <a href=\"\">Done</a> */}\n                    </div>  <div className='mt-4 d-flex align-items-center justify-content-center flex-wrap'>\n            {propertyType?.map((item, index) => (\n                <a key={index} onClick={() => handlePropertyTypeClick(item)}className='PropertyTypeFilters_icon_hp'>\n                    <img src={item.src} alt=\"\" />\n                    <p>{item.label}</p>\n                </a>\n            ))}\n        </div>\n                </div>)\n                }\n\n            </div>\n\n        </>\n    )\n}\n\nexport default PropertyTypeFilters"],"names":["_ref","selectedType","reset","contentVisible","setContentVisible","useState","propertylabel","setPropertylabel","dropdownRef","useRef","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","propertyType","src","label","_jsx","_Fragment","children","_jsxs","ref","className","onClick","toggleContentVisibility","map","item","index","handlePropertyTypeClick","alt"],"sourceRoot":""}