{"version":3,"file":"static/js/434.44a79724.chunk.js","mappings":"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","sources":["pages/GeographicalFilters.jsx"],"sourcesContent":["\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport api from '../utils/ApiConfig';\nimport { toast } from 'react-toastify';\nimport Autosuggest from 'react-autosuggest';\nimport debounce from 'lodash/debounce';\n\nfunction GeographicalFilters({ selectedGeo, reset, onSelectGeo }) {\n  const [contentVisible, setContentVisible] = useState(false);\n  const [nearList, setNearList] = useState([]);\n  const [address, setAddress] = useState(\"\");\n  const dropdownRef = useRef(null);\n  const [suggestions, setSuggestions] = useState([]);\n  const [searchingValue, setSearchingValue] = useState(\"\");\n\n  const areaOptions = [\n    'Eagle Beach', 'Palm Beach', 'Malmok', 'Noord', 'Ayo', 'Oranjestad', \n    'Paradera', 'Pos Chiquito', 'San Nicolas', 'Santa Cruz', 'Savaneta', 'Tanki Leendert'\n  ];\n\n  const handleChange = (e) => {\n    setSearchingValue(e.target.value);\n  };\n\n  const toggleContentVisibility = () => {\n    setContentVisible(!contentVisible);\n  };\n\n  const handleClick = (item) => {\n    selectedGeo(item);\n    setContentVisible(false); // Close dropdown\n  };\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n        setContentVisible(false);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  useEffect(() => {\n    setNearList([]);\n    setAddress(\"\");\n  }, [reset]);\n\n  const handleSuggestionSelected = (event, { suggestion }) => {\n    onSelectGeo(false, suggestion?.id);\n  };\n\n  const handleSuggestionsFetchRequested = useCallback(\n    debounce(async (value) => {\n      try {\n        const response = await api.get(`/property/getbytitle?letter=${value}`);\n        const data = response.data;\n        setSuggestions(data);\n      } catch (error) {\n        console.error('Error fetching suggestions:', error);\n      }\n    }, 300),\n    []\n  );\n\n  return (\n    <>\n      <div className=\"input-group Searching_filter_items_area Searching_filter_search_input_hp GeographicalFilters_area_hp\"  style={{width: \"100%\" }}>\n        <div style={{width: \"100%\" }}>\n          <Autosuggest\n            suggestions={suggestions ?? []}\n            onSuggestionsFetchRequested={({ value }) => handleSuggestionsFetchRequested(value)}\n            getSuggestionValue={(suggestion) => suggestion.title}\n            renderSuggestion={(suggestion) => (\n              <div style={{ cursor: \"pointer\" }}>\n                {suggestion?.title}\n              </div>\n            )}\n            inputProps={{\n              placeholder: 'Stock Searches.....',\n              value: searchingValue?.trim() || '',\n              onChange: handleChange,\n            }}\n            onSuggestionSelected={handleSuggestionSelected}\n          />\n                  <button type=\"button\">\n          <i className=\"fa-solid fa-magnifying-glass\"></i>\n        </button>\n        </div>\n\n      </div>\n\n      {/* Area Dropdown */}\n      <div className=\"GeographicalFilters_area_hp\" ref={dropdownRef}>\n        <button onClick={toggleContentVisibility}>\n          Area <i className=\"fa-solid fa-angle-down ms-3\"></i>\n        </button>\n\n        {contentVisible && (\n          <div\n            style={{\n              position: 'absolute',\n              top: '100%',\n              left: '0',\n              width: '100%',\n              zIndex: 3,\n              background: '#fff',\n              border: '1px solid #ddd',\n              padding: '8px',\n              borderRadius: '4px',\n              maxHeight: '150px',\n              overflowY: 'auto'\n            }}\n          >\n            {areaOptions.map((area, index) => (\n              <div\n                key={index}\n                style={{ padding: '8px', cursor: 'pointer' }}\n                onClick={() => handleClick(area)}\n              >\n                {area}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}\n\nexport default GeographicalFilters;\n"],"names":["_ref","selectedGeo","reset","onSelectGeo","contentVisible","setContentVisible","useState","nearList","setNearList","address","setAddress","dropdownRef","useRef","suggestions","setSuggestions","searchingValue","setSearchingValue","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleSuggestionsFetchRequested","useCallback","debounce","async","data","api","get","value","error","console","_jsxs","_Fragment","children","_jsx","className","style","width","Autosuggest","onSuggestionsFetchRequested","_ref3","getSuggestionValue","suggestion","title","renderSuggestion","cursor","inputProps","placeholder","trim","onChange","e","onSuggestionSelected","handleSuggestionSelected","_ref2","id","type","ref","onClick","toggleContentVisibility","position","top","left","zIndex","background","border","padding","borderRadius","maxHeight","overflowY","map","area","index"],"sourceRoot":""}